/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.uni.thanosgym.view.routes;

import java.util.List;
import java.util.stream.Collectors;

import com.juancamr.route.Route;
import com.uni.thanosgym.dao.CRUDCliente;
import com.uni.thanosgym.dao.CRUDContrato;
import com.uni.thanosgym.model.Client;
import com.uni.thanosgym.model.Contrato;
import com.uni.thanosgym.utils.FrameUtils;
import com.uni.thanosgym.utils.Messages;
import com.uni.thanosgym.utils.StringUtils;
import com.uni.thanosgym.model.Response;
import com.uni.thanosgym.view.dialogs.ClientData;

/**
 *
 * @author juancamr
 */
@Route("main:client/all*")
public class PanelClientAll extends javax.swing.JPanel {
    private List<String[]> allData;

    /**
     * Creates new form PanelClientAll
     */
    public PanelClientAll() {
        initComponents();
        int[] widths = { 200, 500, 300, 200 };
        for (int i = 0; i < widths.length; i++) {
            jtblClientes.getColumnModel().getColumn(i).setPreferredWidth(widths[i]);
        }

        Response<Client> resClientes = CRUDCliente.getInstance().getAll();
        if (!resClientes.isSuccess()) {
            Messages.show(resClientes.getMessage());
            return;
        }

        List<String[]> datos = resClientes.getDataList().stream().map(cliente -> {
            Response<Contrato> resContrato = CRUDContrato.getInstance().getByCliente(cliente.getId());
            Contrato contrato = resContrato.getDataList().getLast();
            return new String[] { cliente.getDni(), cliente.getFullName(), contrato.getPlan().getName(),
                    StringUtils.parseSpanishDate(contrato.getCreatedAt()) };
        }).collect(Collectors.toList());
        allData = datos;

        FrameUtils.addHandleChangeEvent(jtxtInputBusqueda, this::searchByDniOrName);

        fillTable(allData);
    }

    private void searchByDniOrName() {
        String busqueda = jtxtInputBusqueda.getText();
        if (busqueda.isEmpty()) {
            fillTable(allData);
            return;
        }
        fillTable(allData.stream().filter(dato -> dato[0].contains(busqueda) || dato[1].toLowerCase().contains(busqueda.toLowerCase()))
                .collect(Collectors.toList()));
    }

    private void fillTable(List<String[]> datos) {
        ((javax.swing.table.DefaultTableModel) jtblClientes.getModel()).setRowCount(0);
        for (String[] dato : datos) {
            ((javax.swing.table.DefaultTableModel) jtblClientes.getModel()).addRow(dato);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        typography1 = new com.juancamr.components.Typography();
        typography3 = new com.juancamr.components.Typography();
        jtxtInputBusqueda = new com.juancamr.components.InputComponent();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblClientes = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        typography1.setText("Lista de clientes");
        typography1.setType(com.juancamr.components.Typography.Type.HEADING1);
        jPanel1.add(typography1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        typography3.setText("Nombre o DNI");
        jPanel1.add(typography3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, 20));
        jPanel1.add(jtxtInputBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 260, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 750, 20));

        jtblClientes.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null }
                },
                new String[] {
                        "DNI", "Nombres", "Plan", "Desde"
                }) {
            Class[] types = new Class[] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        jtblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtblClientes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 740, 420));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 840,
                                javax.swing.GroupLayout.PREFERRED_SIZE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 690,
                                javax.swing.GroupLayout.PREFERRED_SIZE));
    }// </editor-fold>//GEN-END:initComponents

    private void jtblClientesMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jtblClientesMouseClicked
        int fila = jtblClientes.getSelectedRow();
        if (fila != -1) {
            String dni = String.valueOf(jtblClientes.getValueAt(fila, 0));
            Response<Client> resCliente = CRUDCliente.getInstance().getByDni(dni);
            Response<Contrato> resContrato = CRUDContrato.getInstance().getByCliente(resCliente.getData().getId());
            new ClientData(resContrato.getDataList().getLast());
        }

    }// GEN-LAST:event_jtblClientesMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jtblClientes;
    private com.juancamr.components.InputComponent jtxtInputBusqueda;
    private com.juancamr.components.Typography typography1;
    private com.juancamr.components.Typography typography3;
    // End of variables declaration//GEN-END:variables
}
